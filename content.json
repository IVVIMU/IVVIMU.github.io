{"meta":{"title":"IVVIMU","subtitle":"","description":"","author":"Linmu","url":"https://IVVIMU.github.io","root":"/"},"pages":[{"title":"tags","date":"2020-04-16T04:09:21.000Z","updated":"2020-04-16T07:11:38.981Z","comments":true,"path":"tags/index.html","permalink":"https://ivvimu.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-04-16T05:36:15.000Z","updated":"2020-04-16T07:11:25.275Z","comments":true,"path":"categories/index.html","permalink":"https://ivvimu.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Javascript学习记录（一)  运算符","slug":"Javascript学习记录（一)  运算符","date":"2020-04-19T11:10:04.000Z","updated":"2020-04-20T14:22:20.157Z","comments":true,"path":"2020/04/19/Javascript学习记录（一)  运算符/","link":"","permalink":"https://ivvimu.github.io/2020/04/19/Javascript%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80)%20%20%E8%BF%90%E7%AE%97%E7%AC%A6/","excerpt":"递增与递减运算符前置递增和后置递增小结 前置：先变量自加1，后表达式返回值； 后置：先表达式原值返回，后变量自加1；","text":"递增与递减运算符前置递增和后置递增小结 前置：先变量自加1，后表达式返回值； 后置：先表达式原值返回，后变量自加1； 单独使用时，运行结果相同； 与其他代码联用时，执行结果会不同； 大多使用后置递增/减，且代码独占一行； 递增实例1234567891011121314151617&lt;script&gt; var a = 10; ++a; //++a==11 a==11 var b = ++a + 2; //a==12 ++a==12 console.log(b); //14 var c = 10; c++; //c++==11 C==11 var d = c++ + 2; //c++==11 c==12 console.log(d); //13 var e = 10; var f = e++ + ++e; //e++==10 e==11 |--| e==12 ++e==12 console.log(f); //22 //后置自增，先表达式返回原值，后变量再自加1&lt;/script&gt; 比较运算符 符号 作用 用法 = 赋值 符号右边赋值给符号左边 == (!=) 判断 判断两边值是否相等（有隐式转换） ===(!==) 判断 判断两边的值和数据类型是否完全相同(不同类型不比较，切且无结果，同类型才比较) 1234&lt;script&gt; console.log(18 == \"18\"); //true console.log(18 === \"18\"); //true&lt;/script&gt; 注意123&lt;script&gt; console.log(NaN != NaN); //true&lt;/script&gt; NaN是除数字的任意值，但绝不是确切的某一个值； NaN是一个范围,而不能代表一个确定的值。 短路运算（逻辑中断） 短路运算原理：当有多个表达式（值）时，左边的表达式值可以确定结果时，就不再继续运算右边表达式的值 逻辑与 语法：表达式1 &amp;&amp; 表达式2 如果第一个表达式的值为真，则返回表达式2 如果第一个表达式的值为假，则返回表达式1 123456&lt;script&gt; console.log(123 &amp;&amp; 456); //456 console.log(0 &amp;&amp; 456); //0 console.log(0 &amp;&amp; 1 + 2 &amp;&amp; 456 * 567); //0 console.log('' &amp;&amp; 1 + 2 &amp;&amp; 456 * 567); //''&lt;/script&gt; 逻辑或 语法：表达式1 || 表达式2 如果第一个表达式为真，则返回表达式1 如果第一个表达式为假，则返回表达式2 123456789&lt;script&gt; console.log(123 || 456); //123 console.log(123 || 456 || 456 + 123); //123 console.log(0 || 456 ||456 + 123); //456 var num = 0; console.log(123 || num++); //123 console.log(num); //0&lt;/script&gt; 2020.04.19 创建 2020.04.20 短路运算（逻辑中断）增补","categories":[{"name":"Records","slug":"Records","permalink":"https://ivvimu.github.io/categories/Records/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://ivvimu.github.io/tags/JavaScript/"}]},{"title":"TextArticle","slug":"TextArticle","date":"2020-04-15T14:14:33.000Z","updated":"2020-04-19T11:13:19.129Z","comments":true,"path":"2020/04/15/TextArticle/","link":"","permalink":"https://ivvimu.github.io/2020/04/15/TextArticle/","excerpt":"这是一条测试博客详情点击阅读更多","text":"这是一条测试博客详情点击阅读更多这里没有任何有价值的文字存在，但表情包或许存在。 所有博客功能最开始都会在该博客测试，如果你机缘巧合看到， 对于浪费了你生命的10秒钟时间，我真的感到非常私密马赛。 欢迎在Gitalk板块留言，发个表情包也可以啊。 2020.04.17,21:37 MU","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-04-15T09:08:24.090Z","updated":"2020-04-17T07:12:56.619Z","comments":true,"path":"2020/04/15/hello-world/","link":"","permalink":"https://ivvimu.github.io/2020/04/15/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Hello HexoQuick StartCreate a new post","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Hello HexoQuick StartCreate a new post 1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"Records","slug":"Records","permalink":"https://ivvimu.github.io/categories/Records/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://ivvimu.github.io/tags/JavaScript/"}]}